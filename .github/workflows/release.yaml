name: release
on:
  workflow_dispatch:
  release:
    types: [published]
permissions:
  contents: read
  packages: write
  id-token: write
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
      - name: Setup Cosign
        uses: sigstore/cosign-installer@v3.5.0
      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.1
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare
        id: prep
        run: |
          VERSION=sha-${GITHUB_SHA::8}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF/refs\/tags\//}
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
      - name: Generate images meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/frelon/spegel
          tags: type=raw,value=${{ steps.prep.outputs.VERSION }}
      - name: Publish multi-arch image
        uses: docker/build-push-action@v6
        id: build
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ghcr.io/frelon/spegel:${{ steps.prep.outputs.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Publish riscv64 image
        uses: docker/build-push-action@v5
        id: build
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          build-args:
            - BASE_IMAGE=ghcr.io/go-riscv/distroless/static-unstable:nonroot
          context: .
          file: ./Dockerfile
          platforms: linux/riscv64
          tags: ghcr.io/frelon/spegel:${{ steps.prep.outputs.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Sign the image with Cosign
        run: |
          cosign sign --yes ghcr.io/frelon/spegel@${{ steps.build.outputs.DIGEST }}
